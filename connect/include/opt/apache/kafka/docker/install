#!/usr/bin/env bash
set -e

export PLUGIN_INSTALL_DIR="${PLUGIN_INSTALL_DIR:-"${CONNECT_PLUGIN_INSTALL_DIR:-"/opt/apache/kafka/connectors_install"}"}"

function download () {
  local path="${1:?Requires relative target path as first parameter!}"
  local url="${2:?Requires url as second parameter!}"
  local filename="$(basename "${url}")"
  mkdir -p "${PLUGIN_INSTALL_DIR}/${path}"
  if [[ ${filename} == *.zip ]]; then
    (
      cd "${PLUGIN_INSTALL_DIR}/${path}"
      curl -L -o "${filename}" "${url}"
      unzip -o "${filename}"
      rm "${filename}"
    )
  elif [[ ${filename} == *.tar* ]] || [[ ${filename} == *.tgz ]]; then
    curl -L "${url}" | tar -zx -C "${PLUGIN_INSTALL_DIR}/${path}/"
  elif [[ ${filename} == *.jar ]]; then
    curl -L -o "${PLUGIN_INSTALL_DIR}/${path}/${filename}" "${url}"     
  else
    echo "Could not install '${filename}', because extension is not supported!"
    return 1
  fi
}

# download and install connect plugins via confluent hub cli
# example:
#   confluentinc/kafka-connect-jdbc:latest
#   confluentinc/kafka-connect-http:latest
function installPluginsByConfluentHub () {
  local pluginIds="${1:?Requires plugin ids as first parameter!}"
  touch /tmp/connect-worker-dummy.properties
  for connector in $(sed "s/,/ /g" <<< ${pluginIds}); do 
    confluent-hub install --no-prompt \
      --component-dir ${PLUGIN_INSTALL_DIR} --worker-configs /tmp/connect-worker-dummy.properties \
      ${connector}; 
  done
  rm /tmp/connect-worker-dummy.properties
}

# download and install connect plugins via url
# example:
#   https://github.com/castorm/kafka-connect-http/releases/download/v0.8.11/castorm-kafka-connect-http-0.8.11.zip
#   https://github.com/RedHatInsights/expandjsonsmt/releases/download/0.0.7/kafka-connect-smt-expandjsonsmt-0.0.7.tar.gz
function installPluginsByUrl () {
  local urls="${1:?Requires urls as first parameter!}"
  for url in $(sed "s/,/ /g" <<< ${urls}); do 
    local filename="$(basename "${url}")"
    local name="$(sed 's/\(-v\?[0-9]\+\)\?\..*$//' <<< "${filename}")"
    download "${name}" "${url}"
  done
}

# download libraries to existing plugin folders
# example:
#   confluentinc-kafka-connect-jdbc/lib=https://dlm.mariadb.com/1496775/Connectors/java/connector-java-2.7.2/mariadb-java-client-2.7.2.jar
#   confluentinc-kafka-connect-avro-converter/lib=https://repo1.maven.org/maven2/com/google/guava/guava/30.1.1-jre/guava-30.1.1-jre.jar
function downloadLibs () {
  local libs="${1:?Requires libs as first parameter!}"
  for lib in $(sed "s/,/ /g" <<< ${libs}); do
    if [[ "${lib}" =~ .*=.* ]]; then
      local path=$(cut -d$'=' -f1 <<< "${lib}")
      local url=$(cut -d$'=' -f2 <<< "${lib}")
      local filename="$(basename "${url}")"
      download "${path}" "${url}"
    else
      echo "Could not install '${lib}', because 'path=url' pair expected!"
      return 1
    fi
  done
}

function doInstallFromEnv () {
  if [ -n "${PLUGIN_INSTALL_CONFLUENT_HUB_IDS:-}" ] || [ -n "${CONNECT_PLUGIN_INSTALL_CONFLUENT_HUB_CONNECTOR_IDS:-}" ]; then
    installPluginsByConfluentHub "${PLUGIN_INSTALL_CONFLUENT_HUB_IDS:-"${CONNECT_PLUGIN_INSTALL_CONFLUENT_HUB_CONNECTOR_IDS}"}"
  fi
  if [ -n "${PLUGIN_INSTALL_URLS:-}" ] || [ -n "${CONNECT_PLUGIN_INSTALL_EXTENSION_URLS:-}" ]; then
    installPluginsByUrl "${PLUGIN_INSTALL_URLS:-"${CONNECT_PLUGIN_INSTALL_EXTENSION_URLS}"}"
  fi
  if [ -n "${PLUGIN_INSTALL_LIB_URLS:-}" ]; then
    downloadLibs "${PLUGIN_INSTALL_LIB_URLS}"
  fi
  if [ -n "${CONNECT_PLUGIN_INSTALL_CMDS:-}" ]; then
    echo "Installation by command is no longer supported. Use 'PLUGIN_INSTALL_LIB_URLS' instead and provide a list of 'path=url' pairs."
    return 1
  fi
}

function usage () {
    echo "$0: $1" >&2
    echo
    echo "Usage: $0 [--confluent-hub-ids id_1,id_n] [--urls url_1,url_n] [--lib-urls path_1=url_1,path_n=url_n]"
    echo
    return 1
}

function main () {
  while [[ $# -gt 0 ]]; do
        case "$1" in
            --confluent-hub-ids)
                shift
                local hasNext=true
                while [[ ${hasNext} = true ]]; do
                  case "$1" in
                      ""|--*)
                          hasNext=false
                          ;;
                      *)
                          export PLUGIN_INSTALL_CONFLUENT_HUB_IDS="${PLUGIN_INSTALL_CONFLUENT_HUB_IDS} ${1}"
                          shift
                          ;;
                  esac
                done
                ;; 
            --urls)
                shift
                local hasNext=true
                while [[ ${hasNext} = true ]]; do
                  case "$1" in
                      ""|--*)
                          hasNext=false
                          ;;
                      *)
                          export PLUGIN_INSTALL_URLS="${PLUGIN_INSTALL_URLS} ${1}"
                          shift
                          ;;
                  esac
                done
                ;; 
            --lib-urls)
                shift
                local hasNext=true
                while [[ ${hasNext} = true ]]; do
                  case "$1" in
                      ""|--*)
                          hasNext=false
                          ;;
                      *)
                          export PLUGIN_INSTALL_LIB_URLS="${PLUGIN_INSTALL_LIB_URLS} ${1}"
                          shift
                          ;;
                  esac
                done
                ;; 
            --help)
                usage
                return 0
                ;;
            *)
                usage "Unknown option: $1"
                return $?
                ;;
        esac
    done

    doInstallFromEnv
}

if [ "${BASH_SOURCE[0]}" == "$0" ]; then
   main "$@"
fi