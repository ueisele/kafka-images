ARG OPENJDK_JDK_IMAGE
ARG OPENJDK_JRE_IMAGE

#################################
# Build Kafka Connect (Java)    #
#################################
FROM ${OPENJDK_JDK_IMAGE} as build
LABEL maintainer="code@uweeisele.eu"

USER root

RUN microdnf install -y git findutils patch \
    && microdnf clean all \
    && rm -rf /tmp/*

USER appuser
WORKDIR /home/appuser

ARG KAFKA_GIT_REPO=https://github.com/apache/kafka.git
ARG KAFKA_GIT_REFSPEC
RUN mkdir kafka \
    && cd kafka \
    && git init \
    && git remote add origin ${KAFKA_GIT_REPO} \
    && git fetch --depth 1 origin ${KAFKA_GIT_REFSPEC} \
    && git reset --hard FETCH_HEAD

COPY --chown=appuser:appuser patch/ patch/
ARG KAFKA_PATCH=""
RUN cd kafka \
    && if [ -n "${KAFKA_PATCH}" ]; then \
       patch -p1 < "/home/appuser/patch/${KAFKA_PATCH}" ;\
    fi

RUN mkdir -p /home/appuser/dist/kafka \
    && mkdir -p /home/appuser/dist/kafka/libs \
    && mkdir -p /home/appuser/dist/kafka/dependant-libs

RUN cd kafka \
    && ./gradlew jarConnect \
        -x compileTestJava -x compileTestScala -x :core:jar -x :metadata:jar -x :raft:jar \
        --profile --no-daemon \
    && find /home/appuser/kafka/connect -type f -regextype posix-extended -regex "^.*/.*libs/(kafka|connect).*$" -exec mv {} /home/appuser/dist/kafka/libs/ \; \
    && find /home/appuser/kafka/connect -type f -regextype posix-extended -regex "^.*/.*libs/.*$" ! -name 'kafka*' ! -name 'connect*' -exec mv {} /home/appuser/dist/kafka/dependant-libs/ \;
    
RUN cd kafka \
    && ./gradlew client:jar --profile --no-daemon \
    && cp /home/appuser/kafka/clients/build/libs/* /home/appuser/dist/kafka/libs/

RUN mkdir -p /home/appuser/dist/kafka/licenses \
    && cp /home/appuser/kafka/licenses/* /home/appuser/dist/kafka/licenses/

RUN mkdir -p /home/appuser/dist/kafka/bin \
    && cp /home/appuser/kafka/bin/connect-*.sh /home/appuser/dist/kafka/bin/ \
    && cp /home/appuser/kafka/bin/kafka-run-class.sh /home/appuser/dist/kafka/bin/


#################################
# Build Kafka Connect (Image)   #
#################################
FROM ${OPENJDK_JRE_IMAGE}
LABEL maintainer="code@uweeisele.eu"

USER root

RUN microdnf -y install curl unzip \
    && microdnf clean all \
    && rm -rf /var/lib/rpm \
    && rm -rf /tmp/*

ARG GODUB_VERSION=0.1.0
LABEL godub.version=${GODUB_VERSION}
RUN curl -s -L https://github.com/ueisele/go-docker-utils/releases/download/${GODUB_VERSION}/godub-${GODUB_VERSION}-linux-amd64.tar.gz \
    | tar xvz -C /usr/local/bin

RUN mkdir -p /opt/apache/kafka /usr/local/share/kafka /var/lib/kafka /usr/logs \
    && chown appuser:appuser -R /opt/ /usr/local/share/kafka /var/lib/kafka /usr/logs

USER appuser
WORKDIR /home/appuser

COPY --from=build --chown=appuser:appuser /home/appuser/dist/kafka/dependant-libs /opt/apache/kafka/libs
COPY --from=build --chown=appuser:appuser /home/appuser/dist/kafka/libs /opt/apache/kafka/libs

COPY --from=build --chown=appuser:appuser /home/appuser/dist/kafka/licenses /opt/apache/kafka/licenses

COPY --from=build --chown=appuser:appuser /home/appuser/dist/kafka/bin /opt/apache/kafka/bin
ENV PATH=/opt/apache/kafka/bin:${PATH}

ENV LEGACY_CONNECT_PLUGIN_PATH=/usr/share/java,/opt/apache/kafka/connectors,/opt/apache/kafka/connectors_install
ENV CONNECT_PLUGIN_INSTALL_DIR=/opt/apache/kafka/plugins
ENV CONNECT_PLUGIN_PATH="\
/opt/apache/kafka/libs,\
${CONNECT_PLUGIN_INSTALL_DIR},/usr/local/share/kafka/plugins,/var/lib/kafka/plugins,\
${LEGACY_CONNECT_PLUGIN_PATH}"

RUN mkdir -p \
    /opt/apache/kafka/data /opt/apache/kafka/secrets /opt/apache/kafka/config \
    ${CONNECT_PLUGIN_INSTALL_DIR} /usr/local/share/kafka/plugins /var/lib/kafka/plugins \
    /opt/apache/kafka/connectors /opt/apache/kafka/connectors_install
VOLUME ["/opt/apache/kafka/data","/opt/apache/kafka/secrets"]

COPY --chown=appuser:appuser include/opt/apache/kafka/docker /opt/apache/kafka/docker

CMD ["/opt/apache/kafka/docker/run"]

EXPOSE 8083

# https://opentelemetry.io/docs/instrumentation/java/automatic/agent-config/
# https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jmx-metrics/javaagent
ARG OTEL_VERSION=1.23.0
ARG OTEL_EXPORTER_PROMETHEUS_PORT=9464
ENV OTEL_EXPORTER_PROMETHEUS_PORT=${OTEL_EXPORTER_PROMETHEUS_PORT}
RUN mkdir -p /opt/opentelemetry/javaagent \
  && curl -s -L -o /opt/opentelemetry/javaagent/opentelemetry-javaagent.jar \
      https://repo1.maven.org/maven2/io/opentelemetry/javaagent/opentelemetry-javaagent/${OTEL_VERSION}/opentelemetry-javaagent-${OTEL_VERSION}.jar
COPY --chown=appuser:appuser include/opt/opentelemetry/javaagent /opt/opentelemetry/javaagent
EXPOSE ${OTEL_EXPORTER_PROMETHEUS_PORT}


ARG KAFKA_GIT_REPO=https://github.com/apache/kafka.git \
    KAFKA_GIT_REFSPEC \
    KAFKA_BUILD_GIT_REFSPEC=${KAFKA_GIT_REFSPEC} \
    KAFKA_VERSION=${KAFKA_GIT_REFSPEC}
LABEL kafka.git.repo="${KAFKA_GIT_REPO}" \
    kafka.git.refspec="${KAFKA_GIT_REFSPEC}" \
    kafka.build.git.refspec="${KAFKA_BUILD_GIT_REFSPEC}" \
    kafka.version="${KAFKA_VERSION}"
