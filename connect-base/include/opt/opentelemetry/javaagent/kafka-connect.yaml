---
# https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jmx-metrics/javaagent
# https://docs.confluent.io/platform/current/connect/monitoring.html#use-jmx-to-monitor-kconnect
rules:
  - bean: kafka.connect:type=connect-worker-metrics
    prefix: kafka.connect.worker.
    mapping:
      connector-count:
      connector-startup-attempts-total:
        metric: connector.startup.attempts
        type: counter
      connector-startup-success-total:
        metric: connector.startup.success
        type: counter
      connector-startup-success-percentage:
      connector-startup-failure-total:
        metric: connector.startup.failure
        type: counter
      connector-startup-failure-percentage:
      task-count:
      task-startup-attempts-total:
        metric: task.startup.attempts
        type: counter
      task-startup-success-total:
        metric: task.startup.success
        type: counter
      task-startup-success-percentage:
      task-startup-failure-total:
        metric: task.startup.failure
        type: counter
      task-startup-failure-percentage:

  - bean: kafka.connect:type=connect-worker-metrics,connector=*
    prefix: kafka.connect.worker.
    metricAttribute:
      connector: param(connector)
    mapping:
      connector-destroyed-task-count:
      connector-failed-task-count:
      connector-paused-task-count:
      connector-restarting-task-count:
      connector-running-task-count:
      connector-total-task-count:
      connector-unassigned-task-count:

  - bean: kafka.connect:type=connect-worker-rebalance-metrics
    prefix: kafka.connect.worker.
    mapping:
      epoch:
      completed-rebalances-total:
      rebalancing:
      rebalance-max-time-ms:
      rebalance-avg-time-ms:
      time-since-last-rebalance-ms:

  - bean: kafka.connect:type=connect-coordinator-metrics,client-id=*
    prefix: kafka.connect.coordinator.
    metricAttribute:
      client-id: param(client-id)
    mapping:
      assigned-connectors:
      assigned-tasks:
      failed-rebalance-total:
        metric: failed.rebalance
        type: counter
      failed-rebalance-rate-per-hour:
      heartbeat-total:
        metric: heartbeat
        type: counter
      heartbeat-rate:
      heartbeat-response-time-max:
      join-total:
        metric: join
        type: counter
      join-rate:
      join-time-avg:
      join-time-max:
      last-heartbeat-seconds-ago:
      last-rebalance-seconds-ago:
      rebalance-latency-total:
        metric: rebalance.latency
        type: counter
      rebalance-latency-avg:
      rebalance-latency-max:
      rebalance-rate-per-hour:
      rebalance-total:
        metric: rebalance
        type: counter
      sync-total:
        metric: sync
        type: counter
      sync-rate:
      sync-time-avg:
      sync-time-max:

  - bean: kafka.connect:type=connect-metrics,client-id=*
    prefix: kafka.connect.client.
    metricAttribute:
      client-id: param(client-id)
    mapping:
      connection-close-total:
        metric: connection.close
        type: counter
      connection-close-rate:
      connection-count:
      connection-creation-total:
        metric: connection.creation
        type: counter
      connection-creation-rate:
      failed-authentication-total:
        metric: failed.authentication
        type: counter
      failed-authentication-rate:
      failed-reauthentication-total:
        metric: failed.reauthentication
        type: counter
      failed-reauthentication-rate:
      successful-authentication-total:
        metric: successful.authentication
        type: counter
      successful-authentication-rate:
      successful-reauthentication-total:
        metric: successful.reauthentication
        type: counter
      successful-reauthentication-rate:
      incoming-byte-total:
        metric: incoming.byte
        type: counter
      incoming-byte-rate:
      io-ratio:
      io-time-ns-total:
        metric: io.time.ns
        type: counter
      io-time-ns-avg:
      io-wait-ratio:
      io-wait-time-ns-total:
        metric: io.wait.time.ns
        type: counter
      io-wait-time-ns-avg:
      network-io-total:
        metric: network.io
        type: counter
      network-io-rate:
      outgoing-byte-total:
        metric: outgoing.byte
        type: counter
      outgoing-byte-rate:
      request-total:
        metric: request
        type: counter
      request-rate:
      request-size-avg:
      request-size-max:
      response-total:
        metric: response
        type: counter
      response-rate:
      select-total:
        metric: select
        type: counter
      select-rate:

  - bean: kafka.connect:type=connector-task-metrics,connector=*,task=*
    prefix: kafka.connect.task.
    metricAttribute:
      connector: param(connector)
      task: param(task)
    mapping:
      pause-ratio:
      running-ratio:
      offset-commit-success-percentage:
      offset-commit-failure-percentage:
      offset-commit-max-time-ms:
      offset-commit-avg-time-ms:
      batch-size-max:
      batch-size-avg:
  
  - bean: kafka.connect:type=task-error-metrics,connector=*,task=*
    prefix: kafka.connect.task.
    metricAttribute:
      connector: param(connector)
      task: param(task)
    mapping:
      last-error-timestamp:
      deadletterqueue-produce-failures:
        metric: deadletterqueue.produce.failures
        type: counter
      deadletterqueue-produce-requests:
        metric: deadletterqueue.produce.requests
        type: counter
      total-errors-logged:
        metric: errors.logged
        type: counter
      total-record-errors:
        metric: record.errors
        type: counter
      total-record-failures:
        metric: record.failures
        type: counter
      total-records-skipped:
        metric: record.skipped
        type: counter
      total-retries:
        metric: retries
        type: counter

  - bean: kafka.connect:type=source-task-metrics,connector=*,task=*
    prefix: kafka.connect.task.
    metricAttribute:
      connector: param(connector)
      task: param(task)
    mapping:
      source-record-write-total:
        metric: source.record.write
        type: counter
      source-record-write-rate:
      source-record-poll-total:
        metric: source.record.poll
        type: counter
      source-record-poll-rate:
      source-record-active-count-max:
      source-record-active-count-avg:
      source-record-active-count:
      poll-batch-max-time-ms:
      poll-batch-avg-time-ms:

  - bean: kafka.connect:type=sink-task-metrics,connector=*,task=*
    prefix: kafka.connect.task.
    metricAttribute:
      connector: param(connector)
      task: param(task)
    mapping:
      sink-record-read-total:
        metric: sink.record.read
        type: counter
      sink-record-read-rate:
      sink-record-send-total:
        metric: sink.record.send
        type: counter
      sink-record-send-rate:
      sink-record-active-count:
      sink-record-active-count-max:
      sink-record-active-count-avg:
      partition-count:
      offset-commit-seq-no:
      offset-commit-completion-total:
        metric: offset.commit.completion
        type: counter
      offset-commit-completion-rate:
      offset-commit-skip-total:
        metric: offset.commit.skip
        type: counter
      offset-commit-skip-rate:
      put-batch-max-time-ms:
      put-batch-avg-time-ms:
