#!/usr/bin/env bash

UBI8_RELEASE=8.7
UBI8_VERSION=${UBI8_RELEASE}-1085

ZULU_OPENJDK_PACKAGES=(jre jdk)

ZULU_OPENJDK_19_VERSION=19.0.2
ZULU_OPENJDK_17_VERSION=17.0.6
ZULU_OPENJDK_11_VERSION=11.0.18
ZULU_OPENJDK_8_VERSION=8.0.362

function openjdk_image_name () {
    local user=${1:?"Missing Docker registry user as first parameter!"}
    local package=${2:?"Missing package as second parameter!"}
    echo "${user}/openjdk-${package}"
}

function openjdk_version_by_release () {
    local release=${1:?"Missing OpenJDK release as first parameter (e.g. 11)!"}
    eval "echo \${ZULU_OPENJDK_${release}_VERSION}"
}

function openjdk_image_tags () {
    local release=${1:?"Missing OpenJDK release as first parameter (e.g. 11)!"}
    local version=${2:-"$(openjdk_version_by_release "${release}")"}
    if [ -z "${version}" ]; then
        echo "Missing OpenJDK version as second parameter (e.g. 11.0.13)!"
        return 1
    fi
    echo "zulu${version}-ubi${UBI8_VERSION}" "zulu${release}-ubi${UBI8_RELEASE}" "zulu${version} zulu${release}"
}

function openjdk_image_name_and_tag () {
    local user=${1:?"Missing Docker registry user as first parameter!"}
    local package=${2:?"Missing package as second parameter!"}
    local release=${3:?"Missing OpenJDK release as third parameter (e.g. 11)!"}
    local version=${4:-"$(openjdk_version_by_release "${release}")"}
    if [ -z "${version}" ]; then
        echo "Missing OpenJDK version as fourth parameter (e.g. 11.0.13)!"
        return 1
    fi
    local tags=($(openjdk_image_tags "${release}" "${version}"))
    echo "$(openjdk_image_name ${user} ${package}):${tags[0]}"
}