#############################################################
# Connect Standalone with File Source Example               #
#############################################################
---
version: '2.4'
services:

  #############################################################
  # Connector HTTP Source                                     #
  #############################################################
  connector:
    image: ueisele/apache-kafka-connect-standalone:${KAFKA_VERSION}
    restart: always
    ports:
      - 8083:8083
      - 6001:6001
      - 5005:5005
    volumes:
      - connector-offsets:/opt/apache/kafka/data
    environment:
      ## Plugin Installation
      PLUGIN_INSTALL_URLS: |
        https://github.com/castorm/kafka-connect-http/releases/download/v0.8.11/castorm-kafka-connect-http-0.8.11.zip
        https://github.com/RedHatInsights/expandjsonsmt/releases/download/0.0.7/kafka-connect-smt-expandjsonsmt-0.0.7.tar.gz
      ## Logging
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: "org.reflections=ERROR,org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR"
      CONNECT_LOG4J_PATTERN: "[%d] (%t) %p %m (%c)%n"
      ## JMX
      KAFKA_JMX_PORT: 6001
      KAFKA_JMX_HOSTNAME: localhost
      ## DEBUG
      KAFKA_DEBUG: "y"
      JAVA_DEBUG_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
      ## Worker Configuration
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      ## Connector Configuration
      CONNECTOR_NAME: http-source
      CONNECTOR_CONNECTOR_CLASS: com.github.castorm.kafka.connect.http.HttpSourceConnector
      CONNECTOR_TASKS_MAX: 1
      CONNECTOR_HTTP_REQUEST_URL: http://mock-server:1080/api/task
      CONNECTOR_HTTP_RESPONSE_LIST_POINTER: /items
      CONNECTOR_HTTP_RESPONSE_RECORD_OFFSET_POINTER: "key=/id"
      CONNECTOR_HTTP_TIMER_INTERVAL_MILLIS: 5000
      CONNECTOR_HTTP_TIMER_CATCHUP_INTERVAL_MILLIS: 5000
      CONNECTOR_KAFKA_TOPIC: connect-http-source
      CONNECTOR_TRANSFORMS: "expandvalue,extractvalue,extractkey"
      CONNECTORPROPERTIES_TRANSFORMS: |
        transforms.expandvalue.type=com.redhat.insights.expandjsonsmt.ExpandJSON$$Value
        transforms.expandvalue.sourceFields=value
        transforms.extractvalue.type=org.apache.kafka.connect.transforms.ExtractField$$Value
        transforms.extractvalue.field=value
        transforms.extractkey.type=org.apache.kafka.connect.transforms.ExtractField$$Key
        transforms.extractkey.field=key

  #############################################################
  # Kafka                                                     #
  #############################################################
  kafka:
    image: ueisele/apache-kafka-server-standalone:${KAFKA_VERSION}
    restart: always
    ports:
      - 9092:9092
      - 6002:6002
    volumes:
      - kafka:/opt/apache/kafka/data
    environment:
      ## Logging
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: "kafka=INFO,kafka.network.RequestChannel$=WARN,kafka.producer.async.DefaultEventHandler=DEBUG,kafka.request.logger=WARN,kafka.controller=TRACE,kafka.log.LogCleaner=INFO,state.change.logger=TRACE,kafka.authorizer.logger=WARN"
      CONNECT_LOG4J_PATTERN: "[%d] (%t) %p %m (%c)%n"
      ## JMX
      KAFKA_JMX_PORT: 6002
      KAFKA_JMX_HOSTNAME: localhost
      ## Kafka Configuration
      KAFKA_NUM_PARTITIONS: 2  

  #############################################################
  # Logger Source Topic                                       #
  #############################################################
  topic-logger:
    image: ueisele/apache-kafka-server-standalone:${KAFKA_VERSION}
    restart: always
    command: |
      kafka-console-consumer.sh \
        --bootstrap-server kafka:9092 \
        --topic connect-http-source \
        --group connect-http-source-logger \
        --from-beginning \
        --property print.key=true

  #############################################################
  # Mock HTTP Server                                          #
  #############################################################
  mock-server:
      image: mockserver/mockserver:latest
      restart: always
      environment:
        MOCKSERVER_WATCH_INITIALIZATION_JSON: "true"
        MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
        MOCKSERVER_INITIALIZATION_JSON_PATH: /config/mock-server.initializer.json
      volumes:
        - ./mock-server.initializer.json:/config/mock-server.initializer.json:ro,z

volumes:
  kafka:
  connector-offsets:
