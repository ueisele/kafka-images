#############################################################
# Kafka Cluster with ZooKeeper                              #
# 3x ZooKeeper + 3x broker                                  #
#############################################################
---
version: '2.4'
services:
    
    #############################################################
    # Zookeeper                                                 #
    #############################################################
    zookeeper1:
        image: zookeeper:${ZOOKEEPER_VERSION}
        restart: always
        hostname: zookeeper1
        volumes:
            - zookeeper1_data:/data
            - zookeeper1_datalog:/datalog
        # https://hub.docker.com/_/zookeeper
        environment:
            ZOO_MY_ID: 1 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
            ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
            ZOO_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
            # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
            ZOO_INIT_LIMIT: 5 # (default: 10)
            ZOO_SYNC_LIMIT: 2 # (default: 5)
            # Four letter words
            ZOO_4LW_COMMANDS_WHITELIST: "*" #(default: srvr) A list of comma separated Four Letter Words commands that user wants to use.
            ZOO_ADMINSERVER_ENABLED: "true" #(default: true) The server is started on port 8080, and commands are issued by going to the URL "/commands/[command name]"
            # Metrics
            ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070 metricsProvider.exportJvmInfo=true"

    zookeeper2:
        image: zookeeper:${ZOOKEEPER_VERSION}
        restart: always
        hostname: zookeeper2
        volumes:
            - zookeeper2_data:/data
            - zookeeper2_datalog:/datalog
        # https://hub.docker.com/_/zookeeper
        environment:
            ZOO_MY_ID: 2 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
            ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
            ZOO_INIT_LIMIT: 5 # (default: 10)
            ZOO_SYNC_LIMIT: 2 # (default: 5)
            # Four letter words
            ZOO_4LW_COMMANDS_WHITELIST: "*" #(default: srvr) A list of comma separated Four Letter Words commands that user wants to use.
            ZOO_ADMINSERVER_ENABLED: "true" #(default: true) The server is started on port 8080, and commands are issued by going to the URL "/commands/[command name]"
            # Metrics
            ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070 metricsProvider.exportJvmInfo=true"

    zookeeper3:
        image: zookeeper:${ZOOKEEPER_VERSION}
        restart: always
        hostname: zookeeper3
        volumes:
            - zookeeper3_data:/data
            - zookeeper3_datalog:/datalog
        # https://hub.docker.com/_/zookeeper
        environment:
            ZOO_MY_ID: 3 # (required in cluster mode) Sets the server ID in the myid file, which consists of a single line that contains only the text of that machine’s ID.
            ZOO_SERVERS: server.1=zookeeper1:2888:3888;2181 server.2=zookeeper2:2888:3888;2181 server.3=zookeeper3:2888:3888;2181
            ZOOKEEPER_TICK_TIME: 2000 # (default: 3000) The unit of time for ZooKeeper translated to milliseconds. This governs all ZooKeeper time dependent operations. It is used for heartbeats and timeouts especially.
            # The initLimit and syncLimit are used to govern how long following ZooKeeper servers can take to initialize with the current leader and how long they can be out of sync with the leader.
            ZOO_INIT_LIMIT: 5 # (default: 10)
            ZOO_SYNC_LIMIT: 2 # (default: 5)
            # Four letter words
            ZOO_4LW_COMMANDS_WHITELIST: "*" #(default: srvr) A list of comma separated Four Letter Words commands that user wants to use.
            ZOO_ADMINSERVER_ENABLED: "true" #(default: true) The server is started on port 8080, and commands are issued by going to the URL "/commands/[command name]"
            # Metrics
            ZOO_CFG_EXTRA: "metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider metricsProvider.httpPort=7070 metricsProvider.exportJvmInfo=true"


    #############################################################
    # Confluent Server                                          #
    #############################################################
    kafka-broker1:
        image: confluentinc/cp-server:${CONFLUENT_VERSION}
        restart: always
        networks:
            default:
                aliases:
                    - kafka
        volumes:
            - kafka-broker1:/var/lib/kafka/data
            - ./security/keypair:/tmp/conf
        environment:
            #### Server Basics ####
            KAFKA_NODE_ID: 101
            KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
            #### Listeners ###
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,CLEAR:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker1:9072,EXTERNAL://kafka-broker1:9092,CLEAR://kafka-broker1:9091
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            #### Inter Broker Listener ####
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
                    org.apache.kafka.common.security.plain.PlainLoginModule required \
                    username="admin" \
                    password="admin-secret" \
                    user_admin="admin-secret" \
                    user_mds="mds-secret";
            #### External Listener ####
            KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required;
            KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
            #### Authorization ####
            KAFKA_SUPER_USERS: User:admin;User:mds;User:superUser;User:ANONYMOUS
            KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
            KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT
            #### MDS ####
            KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
            KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka-broker1:8090
            KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
            #### MDS Ldap ####
            # Configure MDS to talk to AD/LDAP
            KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
            KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
            KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389
            # Authenticate to LDAP
            KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluentdemo,dc=io
            KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
            KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
            # Locate LDAP users and groups
            KAFKA_LDAP_SEARCH_MODE: GROUPS
            KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluentdemo,dc=io
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
            KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluentdemo,dc=io
            KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluentdemo,dc=io
            KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
            KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
            #### Logging ###ä
            KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
            KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
            #### Metrics ####
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
            KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker1:9072,kafka-broker2:9072,kafka-broker3:9072
            CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"admin\" \
                password=\"admin-secret\";"
            CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
            #### Defaults ####
            KAFKA_DEFAULT_REPLICATION_FACTOR: 3
            KAFKA_NUM_PARTITIONS: 3
            #### Embedded Kafka Test ####
            # EmbeddedKafkaRest: Kafka Client Configuration
            KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://kafka-broker1:9072,SASL_PLAINTEXT://kafka-broker2:9072,SASL_PLAINTEXT://kafka-broker3:9072
            KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_PLAINTEXT
            # EmbeddedKafkaRest: HTTP Auth Configuration
            KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
            KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
            KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /tmp/conf/public.pem
            # EmbeddedKafkaRest: MDS Client configuration
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka-broker1:8090,http://kafka-broker2:8090,http://kafka-broker3:8090
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'restAdmin:restAdmin'
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
            KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000           

    kafka-broker2:
        image: confluentinc/cp-server:${CONFLUENT_VERSION}
        restart: always
        networks:
            default:
                aliases:
                    - kafka
        volumes:
            - kafka-broker2:/var/lib/kafka/data
            - ./security/keypair:/tmp/conf
        environment:
            #### Server Basics ####
            KAFKA_NODE_ID: 102
            KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
            #### Listeners ###
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,CLEAR:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker2:9072,EXTERNAL://kafka-broker2:9092,CLEAR://kafka-broker2:9091
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            #### Inter Broker Listener ####
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
                    org.apache.kafka.common.security.plain.PlainLoginModule required \
                    username="admin" \
                    password="admin-secret" \
                    user_admin="admin-secret" \
                    user_mds="mds-secret";
            #### External Listener ####
            KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required;
            KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
            #### Authorization ####
            KAFKA_SUPER_USERS: User:admin;User:mds;User:superUser;User:ANONYMOUS
            KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
            KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT
            #### MDS ####
            KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
            KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka-broker2:8090
            KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
            #### MDS Ldap ####
            # Configure MDS to talk to AD/LDAP
            KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
            KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
            KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389
            # Authenticate to LDAP
            KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluentdemo,dc=io
            KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
            KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
            # Locate LDAP users and groups
            KAFKA_LDAP_SEARCH_MODE: GROUPS
            KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluentdemo,dc=io
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
            KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluentdemo,dc=io
            KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluentdemo,dc=io
            KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
            KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
            #### Logging ###ä
            KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
            KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
            #### Metrics ####
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
            KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker1:9072,kafka-broker2:9072,kafka-broker3:9072
            CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"admin\" \
                password=\"admin-secret\";"
            CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
            #### Defaults ####
            KAFKA_DEFAULT_REPLICATION_FACTOR: 3
            KAFKA_NUM_PARTITIONS: 3
            #### Embedded Kafka Test ####
            # EmbeddedKafkaRest: Kafka Client Configuration
            KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://kafka-broker1:9072,SASL_PLAINTEXT://kafka-broker2:9072,SASL_PLAINTEXT://kafka-broker3:9072
            KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_PLAINTEXT
            # EmbeddedKafkaRest: HTTP Auth Configuration
            KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
            KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
            KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /tmp/conf/public.pem
            # EmbeddedKafkaRest: MDS Client configuration
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka-broker1:8090,http://kafka-broker2:8090,http://kafka-broker3:8090
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'restAdmin:restAdmin'
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
            KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000        

    kafka-broker3:
        image: confluentinc/cp-server:${CONFLUENT_VERSION}
        restart: always
        ports:
            - 39092:39092
        networks:
            default:
                aliases:
                    - kafka
        volumes:
            - kafka-broker3:/var/lib/kafka/data
            - ./security/keypair:/tmp/conf
        environment:
            #### Server Basics ####
            KAFKA_NODE_ID: 103
            KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
            #### Listeners ###
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,CLEAR:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker3:9072,EXTERNAL://kafka-broker3:9092,CLEAR://kafka-broker3:9091
            KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
            #### Inter Broker Listener ####
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
            KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_LISTENER_NAME_INTERNAL_PLAIN_SASL_JAAS_CONFIG: |
                    org.apache.kafka.common.security.plain.PlainLoginModule required \
                    username="admin" \
                    password="admin-secret" \
                    user_admin="admin-secret" \
                    user_mds="mds-secret";
            #### External Listener ####
            KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: PLAIN
            KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required;
            KAFKA_LISTENER_NAME_EXTERNAL_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.security.auth.provider.ldap.LdapAuthenticateCallbackHandler
            #### Authorization ####
            KAFKA_SUPER_USERS: User:admin;User:mds;User:superUser;User:ANONYMOUS
            KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
            KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT
            #### MDS ####
            KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
            KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka-broker3:8090
            KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
            KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
            #### MDS Ldap ####
            # Configure MDS to talk to AD/LDAP
            KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
            KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
            KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389
            # Authenticate to LDAP
            KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=confluentdemo,dc=io
            KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: admin
            KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
            # Locate LDAP users and groups
            KAFKA_LDAP_SEARCH_MODE: GROUPS
            KAFKA_LDAP_GROUP_SEARCH_BASE: ou=groups,dc=confluentdemo,dc=io
            KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE: memberUid
            KAFKA_LDAP_GROUP_OBJECT_CLASS: posixGroup
            KAFKA_LDAP_GROUP_MEMBER_ATTRIBUTE_PATTERN: cn=(.*),ou=users,dc=confluentdemo,dc=io
            KAFKA_LDAP_USER_SEARCH_BASE: ou=users,dc=confluentdemo,dc=io
            KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
            KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
            #### Logging ###ä
            KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
            KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
            #### Metrics ####
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
            KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
            KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-broker1:9072,kafka-broker2:9072,kafka-broker3:9072
            CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
            CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.plain.PlainLoginModule required \
                username=\"admin\" \
                password=\"admin-secret\";"
            CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: PLAIN
            #### Defaults ####
            KAFKA_DEFAULT_REPLICATION_FACTOR: 3
            KAFKA_NUM_PARTITIONS: 3
            #### Embedded Kafka Test ####
            # EmbeddedKafkaRest: Kafka Client Configuration
            KAFKA_KAFKA_REST_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://kafka-broker1:9072,SASL_PLAINTEXT://kafka-broker2:9072,SASL_PLAINTEXT://kafka-broker3:9072
            KAFKA_KAFKA_REST_CLIENT_SECURITY_PROTOCOL: SASL_PLAINTEXT
            # EmbeddedKafkaRest: HTTP Auth Configuration
            KAFKA_KAFKA_REST_KAFKA_REST_RESOURCE_EXTENSION_CLASS: io.confluent.kafkarest.security.KafkaRestSecurityResourceExtension
            KAFKA_KAFKA_REST_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler
            KAFKA_KAFKA_REST_PUBLIC_KEY_PATH: /tmp/conf/public.pem
            # EmbeddedKafkaRest: MDS Client configuration
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka-broker1:8090,http://kafka-broker2:8090,http://kafka-broker3:8090
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_HTTP_AUTH_CREDENTIALS_PROVIDER: BASIC
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_BASIC_AUTH_USER_INFO: 'restAdmin:restAdmin'
            KAFKA_KAFKA_REST_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000
            KAFKA_KAFKA_REST_CLIENT_CONFLUENT_METADATA_SERVER_URLS_MAX_AGE_MS: 60000        

    #############################################################
    # Open Ldap                                                 #
    #############################################################
    openldap:
        image: osixia/openldap:1.3.0
        restart: always
        volumes:
            - ./security/ldap_users:/container/service/slapd/assets/config/bootstrap/ldif/custom
        environment:
            LDAP_ORGANISATION: "ConfluentDemo"
            LDAP_DOMAIN: "confluentdemo.io"
            LDAP_BASE_DN: "dc=confluentdemo,dc=io"
        command: "--copy-service --loglevel debug"


    #############################################################
    # CLIs                                                      #
    #############################################################
    confluent-cli:
        image: confluentinc/confluent-cli:2.3.1
        hostname: confluent-cli
        entrypoint: /bin/bash
        tty: true
        environment:
            MDS_URL: http://kafka-broker1:8090

    kafka-cli:
        image: confluentinc/cp-server:${CONFLUENT_VERSION}
        hostname: kafka-cli
        entrypoint: /bin/bash
        tty: true
        volumes:
         - ./security/client:/tmp/conf

    kafkacat:
        image: confluentinc/cp-kafkacat:${CONFLUENT_VERSION}
        hostname: kafkacat
        entrypoint: /bin/bash
        tty: true
        volumes:
         - ./security/client:/tmp/conf

volumes:
    zookeeper1_data:
    zookeeper1_datalog:
    zookeeper2_data:
    zookeeper2_datalog:
    zookeeper3_data:
    zookeeper3_datalog:
    kafka-broker1:
    kafka-broker2:
    kafka-broker3:

networks:
    default:
        name: ${DOMAIN_NAME}