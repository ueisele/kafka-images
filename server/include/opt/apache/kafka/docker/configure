#!/usr/bin/env bash
#
# Copyright 2016 Confluent Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

. /opt/apache/kafka/docker/bash-config

# If PROCESS_ROLES is set to 'broker', 'controller' or 'broker,controller' 
# the server runs in KRaft mode.
if [[ -z "${KAFKA_PROCESS_ROLES-}" ]]
then
  godub ensure KAFKA_ZOOKEEPER_CONNECT
else
  godub ensure KAFKA_CONTROLLER_QUORUM_VOTERS KAFKA_NODE_ID
fi

if [[ "${KAFKA_PROCESS_ROLES-}" == *"controller"* ]]
then
  godub ensure KAFKA_CONTROLLER_LISTENER_NAMES
  # In KRaft mode the controller needs to specify its listener explicitly without a advertised listener.
  # Therefore its not possible to derive listeners from advertised listeners.
  godub ensure KAFKA_LISTENERS
else
  godub ensure KAFKA_ADVERTISED_LISTENERS

  # By default, LISTENERS is derived from ADVERTISED_LISTENERS by replacing
  # hosts with 0.0.0.0. This is good default as it ensures that the broker
  # process listens on all ports.
  if [[ -z "${KAFKA_LISTENERS-}" ]]
  then
    export KAFKA_LISTENERS
    KAFKA_LISTENERS=$(echo "$KAFKA_ADVERTISED_LISTENERS" | sed -e 's/:\/\/[^,]*:/:\/\/0.0.0.0:/g')
  fi
fi

godub path -r -w /opt/apache/kafka/config

if [[ -z "${KAFKA_LOG_DIRS-}" ]]
then
  export KAFKA_LOG_DIRS
  KAFKA_LOG_DIRS="/opt/apache/kafka/data"
fi

# Set if LISTENERS has SSL:// or SASL_SSL:// endpoints.
if [[ $KAFKA_LISTENERS == *"SSL://"* ]]
then
  echo "SSL is enabled."

  GODUB_PATH_TIMEOUT=${GODUB_PATH_TIMEOUT:-0s}

  godub ensure KAFKA_SSL_KEYSTORE_FILENAME
  export KAFKA_SSL_KEYSTORE_LOCATION="/opt/apache/kafka/secrets/$KAFKA_SSL_KEYSTORE_FILENAME"
  godub path --timeout ${GODUB_PATH_TIMEOUT} -r "$KAFKA_SSL_KEYSTORE_LOCATION"

  if [[ -n "${KAFKA_SSL_KEY_CREDENTIALS-}" ]]
  then
    KAFKA_SSL_KEY_CREDENTIALS_LOCATION="/opt/apache/kafka/secrets/$KAFKA_SSL_KEY_CREDENTIALS"
    godub path --timeout ${GODUB_PATH_TIMEOUT} -r "$KAFKA_SSL_KEY_CREDENTIALS_LOCATION"
    export KAFKA_SSL_KEY_PASSWORD
    KAFKA_SSL_KEY_PASSWORD=$(cat "$KAFKA_SSL_KEY_CREDENTIALS_LOCATION")
  fi

  if [[ $KAFKA_SSL_KEYSTORE_TYPE != "PEM" ]]
  then  
    godub ensure KAFKA_SSL_KEYSTORE_CREDENTIALS
    KAFKA_SSL_KEYSTORE_CREDENTIALS_LOCATION="/opt/apache/kafka/secrets/$KAFKA_SSL_KEYSTORE_CREDENTIALS"
    godub path --timeout ${GODUB_PATH_TIMEOUT} -r "$KAFKA_SSL_KEYSTORE_CREDENTIALS_LOCATION"
    export KAFKA_SSL_KEYSTORE_PASSWORD
    KAFKA_SSL_KEYSTORE_PASSWORD=$(cat "$KAFKA_SSL_KEYSTORE_CREDENTIALS_LOCATION")
  fi
  
  if [[ -n "${KAFKA_SSL_CLIENT_AUTH-}" ]] && ( [[ $KAFKA_SSL_CLIENT_AUTH == *"required"* ]] || [[ $KAFKA_SSL_CLIENT_AUTH == *"requested"* ]] )
  then
      godub ensure KAFKA_SSL_TRUSTSTORE_FILENAME
      export KAFKA_SSL_TRUSTSTORE_LOCATION="/opt/apache/kafka/secrets/$KAFKA_SSL_TRUSTSTORE_FILENAME"
      godub path --timeout ${GODUB_PATH_TIMEOUT} -r "$KAFKA_SSL_TRUSTSTORE_LOCATION"

      if [[ $KAFKA_SSL_TRUSTSTORE_TYPE != "PEM" ]]
      then
        godub ensure KAFKA_SSL_TRUSTSTORE_CREDENTIALS
        KAFKA_SSL_TRUSTSTORE_CREDENTIALS_LOCATION="/opt/apache/kafka/secrets/$KAFKA_SSL_TRUSTSTORE_CREDENTIALS"
        godub path --timeout ${GODUB_PATH_TIMEOUT} -r "$KAFKA_SSL_TRUSTSTORE_CREDENTIALS_LOCATION"
        export KAFKA_SSL_TRUSTSTORE_PASSWORD
        KAFKA_SSL_TRUSTSTORE_PASSWORD=$(cat "$KAFKA_SSL_TRUSTSTORE_CREDENTIALS_LOCATION")
      fi
  fi
  
fi

# Set if KAFKA_LISTENERS has SASL_PLAINTEXT:// or SASL_SSL:// endpoints.
if [[ $KAFKA_LISTENERS =~ .*SASL_.*://.* ]]
then
  echo "SASL" is enabled.

  godub ensure KAFKA_OPTS

  if [[ ! $KAFKA_OPTS == *"java.security.auth.login.config"*  ]]
  then
    echo "KAFKA_OPTS should contain 'java.security.auth.login.config' property."
  fi
fi

if [[ -n "${KAFKA_JMX_OPTS-}" ]]
then
  if [[ ! $KAFKA_JMX_OPTS == *"com.sun.management.jmxremote.rmi.port"*  ]]
  then
    echo "KAFKA_OPTS should contain 'com.sun.management.jmxremote.rmi.port' property. It is required for accessing the JMX metrics externally."
  fi
fi

godub template -i "/opt/apache/kafka/docker/*.gotpl" -o "/opt/apache/kafka/config/"